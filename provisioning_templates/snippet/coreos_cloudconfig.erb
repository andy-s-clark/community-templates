#cloud-config
<%#
kind: snippet
name: coreos_cloudconfig
%>
<%
  if @host.param_false?('enable_etcd')
    has_units = false
  else
    has_units = true
  end

  if @host.params['cloudconfig_write_files']
    has_write_files = true
  else
    has_write_files = false
  end

  if @host.params['reboot-strategy']
    has_units = true
  end

  if ['master', 'worker'].include?(@host.params['k8s_install'])
    has_units = true
    has_write_files = true
    k8s_install = true
    k8s_install_snippet = 'k8s_' + @host.params['k8s_install'] + '_install'
  else
    k8s_install = false
  end

  if @host.param_true?('expose_docker_socket')
    has_units = true
  end

  if @host.subnet.respond_to?(:dhcp_boot_mode?)
    dhcp = @host.subnet.dhcp_boot_mode? && !@static
  else
    dhcp = !@static
  end
  unless dhcp
    has_units = true
  end
  if @host.params['cloudconfig_units']
    has_units = true
  end
-%>
coreos:
<% if @host.params['reboot-strategy'] -%>
  update:
    reboot-strategy: <%= @host.params['reboot-strategy'] %>
<% end -%>
<% unless @host.param_false?('enable_etcd') -%>
  etcd2:
<% if @host.params['etcd_discovery_url'] -%>
    discovery: <%= @host.params['etcd_discovery_url'] %>
<% end -%>
    advertise-client-urls: http://<%= @host.ip %>:2379
    initial-advertise-peer-urls: http://<%= @host.ip %>:2380
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://0.0.0.0:2380
<% end -%>
<% if has_units -%>
  units:
<% unless @host.param_false?('enable_etcd') -%>
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
<% end -%>
<% if @host.param_true?('expose_docker_socket') -%>
    - name: docker-tcp.socket
      command: start
      enable: yes
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        BindIPv6Only=both
        Service=docker.service

        [Install]
        WantedBy=sockets.target
    - name: enable-docker-tcp.service
      command: start
      content: |
        [Unit]
        Description=Enable the Docker Socket for the API

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/systemctl enable docker-tcp.socket
<% end -%>
<% unless dhcp -%>
    - name: systemd-networkd.service
      command: stop
    - name: static.network
      command: start
      content: |
        [Match]
        MACAddress=<%= @host.mac %>
        [Network]
<% if @host.subnet.present? -%>
        Gateway=<%= @host.subnet.gateway %>
<% end -%>
        Address=<%= @host.ip %>/<%= @host.subnet.cidr %>
<% if @host.subnet.dns_primary.present? -%>
        DNS=<%= @host.subnet.dns_primary %>
<% end -%>
<% if @host.subnet.dns_secondary.present? -%>
        DNS=<%= @host.subnet.dns_secondary %>
<% end -%>
    - name: down-interfaces.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/bash -c 'for i in $(/usr/bin/ls /sys/class/net/); do [ $i == "lo" ] || (/usr/bin/ip link set $i down; /usr/bin/ip addr flush dev $i); done'
    - name: systemd-networkd.service
      command: restart
<% end -%>
<% if k8s_install_snippet -%>
    - name: kubernetes-bootstrap.service
      runtime: no
      command: start
      content: |
        [Unit]
        Description=Install kubernetes
        [Service]
        Type=oneshot
        ExecStart=/home/core/k8s-install.sh
        [X-Fleet]
        X-Conflicts=kubernetes-bootstrap.service
<% end -%>
<% if @host.params['cloudconfig_units'] -%>
<%= indent 4 do
  @host.params['cloudconfig_units'].gsub('$private_ipv4', @host.ip)
end %>
<% end -%>
<% end -%>
<% if @host.params['flannel_etcd_endpoints'] -%>
  flannel:
    interface: <%= @host.ip %>
    etcd_endpoints: <%= @host.params['flannel_etcd_endpoints'] %>
<% end -%>
<% if @host.params['ssh_authorized_keys'] -%>
ssh_authorized_keys:
<% @host.params['ssh_authorized_keys'].split(',').map(&:strip).each do |ssh_key| -%>
  - "<%= ssh_key %>"
<% end -%>
<% else -%>
  users:
    - name: core
      passwd: <%= root_pass %>
<% end -%>
<% if has_write_files -%>
write_files:
<% if k8s_install -%>
  - path: "/run/coreos-kubernetes/options.env"
    content: |
<% if @host.params['k8s_version'] -%>
      K8S_VER=<%= @host.params['k8s_version'] %>
<% end -%>
<% if @host.params['hyperkube_image_repo'] -%>
      HYPERKUBE_IMAGE_REPO=<%= @host.params['hyperkube_image_repo'] %>
<% end -%>
<% if @host.params['etcd_endpoints'] -%>
      ETCD_ENDPOINTS=<%= @host.params['etcd_endpoints'] %>
<% end -%>
<% if @host.params['pod_network'] -%>
      POD_NETWORK=<%= @host.params['pod_network'] %>
<% end -%>
<% if @host.params['service_ip_range'] -%>
      SERVICE_IP_RANGE=<%= @host.params['service_ip_range'] %>
<% end -%>
<% if @host.params['k8s_service_ip'] -%>
      K8S_SERVICE_IP=<%= @host.params['k8s_service_ip'] %>
<% end -%>
<% if @host.params['dns_service_ip'] -%>
      DNS_SERVICE_IP=<%= @host.params['dns_service_ip'] %>
<% end -%>
<% if @host.params['use_calico'] -%>
      USE_CALICO=<%= @host.params['use_calico'] %>
<% end -%>
<% if @host.params['container_runtime'] -%>
      CONTAINER_RUNTIME=<%= @host.params['container_runtime'] %>
<% end -%>
<% if @host.params['k8s_controller_endpoint'] -%>
      CONTROLLER_ENDPOINT=<%= @host.params['k8s_controller_endpoint'] %>
<% end -%>
      ADVERTISE_IP=<%= @host.ip %>
<% if @host.params['k8s_ca_cert'] -%>
  - path: "/etc/kubernetes/ssl/ca.pem"
    owner: "root"
    permissions: "0600"
    content: |
<%= indent 6 do
  @host.params['k8s_ca_cert']
end %>
<% end -%>
<% if @host.params['k8s_apiserver_cert'] -%>
  - path: "/etc/kubernetes/ssl/apiserver.pem"
    owner: "root"
    permissions: "0600"
    content: |
<%= indent 6 do
  @host.params['k8s_apiserver_cert']
end %>
<% end -%>
<% if @host.params['k8s_apiserver_key'] -%>
  - path: "/etc/kubernetes/ssl/apiserver-key.pem"
    owner: "root"
    permissions: "0600"
    content: |
<%= indent 6 do
  @host.params['k8s_apiserver_key']
end %>
<% end -%>
<% if @host.params['k8s_worker_cert'] -%>
  - path: "/etc/kubernetes/ssl/worker.pem"
    owner: "root"
    permissions: "0600"
    content: |
<%= indent 6 do
  @host.params['k8s_worker_cert']
end %>
<% end -%>
<% if @host.params['k8s_worker_key'] -%>
  - path: "/etc/kubernetes/ssl/worker-key.pem"
    owner: "root"
    permissions: "0600"
    content: |
<%= indent 6 do
  @host.params['k8s_worker_key']
end %>
<% end -%>
  - path: "/home/core/k8s-install.sh"
    owner: "core"
    permissions: "0755"
    content: |
<%= indent 6 do
  snippet k8s_install_snippet
end %>
<% end -%>
<% end -%>
<% if @host.params['cloudconfig_write_files'] -%>
<%= indent 2 do
  @host.params['cloudconfig_write_files'].gsub('$private_ipv4', @host.ip)
end %>
<% end -%>
